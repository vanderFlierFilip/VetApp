@*<style>
  .autocomplete {
    position: relative;
    display: inline-block;
  }

  .autocomplete-items {
    position: absolute;
    border: 1px solid #d4d4d4;
    border-bottom: none;
    border-top: none;
    z-index: 99;
    top: 100%;
    left: 0;
    right: 0;
  }

  .autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff;
    border-bottom: 1px solid #d4d4d4;
  }

  .autocomplete-items div:hover {
    color: #ffffff;
    background-color: DodgerBlue !important;

  }

  .autocomplete-active {
    /*when navigating through the items using the arrow keys:*/
    background-color: DodgerBlue !important;
    color: #ffffff;
  }
</style>*@
<link rel="stylesheet" href="~/lib/bootstrap-datepicker/bootstrap-datepicker.css" />

@{
    @model VaccinationViewModel
    ViewData["Title"] = $"Вакцинација на {Model.Pet.Name}";
}
<style>
    .hidden {
        opacity: 0;
        transition: opacity 0.1s;
    }

</style>
<partial name="_SubHeader" view-data="ViewData"></partial>
<partial name="_CheckupSubHeader" model="@Model"></partial>

<form id="vaccinationForm" asp-action="SaveVaccination">
    <div id="PlaceHolderHere"> </div>

    <input hidden asp-for="OwnerId" />
    <input hidden asp-for="PetId" />
    <div class="container">
        <div class="row">
            <div class="card w-100 shadow bg-white rounded">
                <div class="card-body">
                    <h5>Терапија</h5>
                    <div class="row">
                        <div class="col">
                            @Html.Partial("_CheckupMedicamentsPartial", @Model.CheckupDetailViewModel)
                        </div>
                    </div>

                    <div id="addAddMoreDiv"></div>
                    <a id="add_row" class="btn btn-primary float-right">Додади ред</a>
                    <br />
                    <br />

                </div>
            </div>
            <div class="card w-100 px-2 py-5 mt-4 shadow bg-white rounded">
                <div class="row">
                    <div class="col-6">
                        <label>Тип на вакцина</label>
                         <select class="form-control" asp-for="Vaccine" asp-items="@Model.Vaccines"></select>
                    </div>
                    <div class="col-6">
                        <div class="col">
                            <label>Наредна вакцинација:</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                                <input type="text" class="form-control" id="datepicker" asp-for="NextVaccinationDate">
                                <div class="small">Доколку не се внесе датум за следна вакцинација, системот сам ќе го пресмета датумот!</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card w-100 px-2 py-3 mt-4 shadow bg-white rounded">
                <div class="row ">
                    <div class="col-3">
                        <div class="row">
                            <div class="col-2">
                                <i id="hideTotalBtn" class="fa fa-eye-slash"></i>
                            </div>
                            <div class="col-10">
                                <div class="hidden" id="totalPrice"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col px-3">
                        <div class="form-inline justify-content-end pr-4">
                            <label class="mr-5">Наплатено: </label>
                            <input type="number" class="form-control mr-auto p-2 w-50" asp-for="PaidSum">
                            <button type="submit" class="btn btn-success">
                                Зачувај
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</form>
@section Scripts {
    <script src="~/lib/bootstrap-datepicker/bootstrap-datepicker.js"></script>
    <script src="~/lib/bootstrap-datepicker/bootstrap-datepicker.mk.js"></script>
    <script>
        $('#add_row').on('click', function () {
            $.ajax({
                url: '@Url.Action("AddCheckupDetailPartial", "CheckupMedicamentsHelper")',
                type: 'GET',
                data: {
                },
                success: function (result) {
                    $('#addAddMoreDiv').append(result);

                },
                error: function () {
                }
            });
        })
        $('#datepicker').datepicker({
            language: "mk",
            autoclose: true,
            format: 'mm/dd/yyyy',
            startDate: '+3d',
        });

        $('#diagnosisSelect').on('change', (e) => {
            $('#diagnosisValue').html(e.target.value);
        })


        $('#hideTotalBtn').on('click', () => {
            let val = $('#vaccinationForm').serializeArray();
            $.ajax({
                method: 'POST',
                url: '@Url.Action("GetTotalAmount", "CheckupMedicamentsHelper")',
                data: val,
                success: (data) => {
                    $('#totalPrice').html(data + " ден")
                    $('#totalPrice').toggleClass('hidden');
                }
            })
        })

    </script>
}

    @*<script>

    $('#accountBtn').on('click', function(e) {
        e.preventDefault();
        window.open('@Url.Action("GetFile")/23')
    })

  $('#add_row').on('click', function () {
    $.ajax({
      url: '@Url.Action("AddCheckupDetailPartial")',
      type: 'GET',
      data: {
      },
      success: function (result) {
        $('#addAddMoreDiv').append(result);

      },
      error: function () {
      }
    });
  })

  var owners = [];

  @foreach (var owner in @Model.Owners)
  {

    @:owners.push({ name: "@owner.FullName", id: @owner.Id});
  }

    function autocomplete(inp, arr) {
      /*the autocomplete function takes two arguments,
      the text field element and an array of possible autocompleted values:*/
      var currentFocus;
      /*execute a function when someone writes in the text field:*/
      inp.addEventListener("input", function (e) {
        var a, b, i, val = this.value;
        /*close any already open lists of autocompleted values*/
        closeAllLists();
        if (!val) { return false; }
        currentFocus = -1;
        /*create a DIV element that will contain the items (values):*/
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "autocomplete-list");
        a.setAttribute("class", "autocomplete-items");
        /*append the DIV element as a child of the autocomplete container:*/
        this.parentNode.appendChild(a);
        /*for each item in the array...*/
        for (i = 0; i < arr.length; i++) {
          /*check if the item starts with the same letters as the text field value:*/
          if (arr[i].name.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
            /*create a DIV element for each matching element:*/
            b = document.createElement("DIV");
            /*make the matching letters bold:*/
            b.innerHTML = "<strong>" + arr[i].name.substr(0, val.length) + "</strong>";
            b.innerHTML += arr[i].name.substr(val.length);
            /*insert a input field that will hold the current array item's value:*/
            let selectedObject = arr[i]
            b.innerHTML += "<input type='hidden' value='" + arr[i].name + "'>";
            /*execute a function when someone clicks on the item value (DIV element):*/
            b.addEventListener("click", function (e) {
              /*insert the value for the autocomplete text field:*/
              inp.value = this.getElementsByTagName("input")[0].value;
              ownerChanged(selectedObject)
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
            });
            a.appendChild(b);
          }
        }
      });
      /*execute a function presses a key on the keyboard:*/
      inp.addEventListener("keydown", function (e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
          /*If the arrow DOWN key is pressed,
          increase the currentFocus variable:*/
          currentFocus++;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 38) { //up
          /*If the arrow UP key is pressed,
          decrease the currentFocus variable:*/
          currentFocus--;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 13) {
          /*If the ENTER key is pressed, prevent the form from being submitted,*/
          e.preventDefault();
          if (currentFocus > -1) {
            /*and simulate a click on the "active" item:*/
            if (x) x[currentFocus].click();
          }
        }
      });
      function addActive(x) {
        /*a function to classify an item as "active":*/
        if (!x) return false;
        /*start by removing the "active" class on all items:*/
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        /*add class "autocomplete-active":*/
        x[currentFocus].classList.add("autocomplete-active");
      }
      function removeActive(x) {
        /*a function to remove the "active" class from all autocomplete items:*/
        for (var i = 0; i < x.length; i++) {
          x[i].classList.remove("autocomplete-active");
        }
      }
      function closeAllLists(elmnt) {
        /*close all autocomplete lists in the document,
        except the one passed as an argument:*/
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) {
          if (elmnt != x[i] && elmnt != inp) {
            x[i].parentNode.removeChild(x[i]);
          }
        }
      }
      /*execute a function when someone clicks in the document:*/
      document.addEventListener("click", function (e) {
        closeAllLists(e.target);
      });
    }

  let ownerNames = owners.map(x => x.name);
  let input = document.getElementById("myInput");
  autocomplete(input, owners)
  var ownerChanged = function (owner) {
    $("#ownerId").val(owner.id)
    getOwnerPets(owner)
  }
  var getOwnerPets = function (owner) {
    $.ajax({
      url: '@Url.Action("GetOwnersPets","Vaccination")',
      type: 'GET',
      data: {
        ownerId: owner.id
      },
      success: function (data) {
        $('#pet').find('option').remove()
        $(data).each(
          function (index, item) {
            $('#pet').append('<option value="' + item.petId + '">' + item.name + '</option>')
          });
      },
      error: function () {
      }
    });
  }
</script>*@






    @*<div class="container mt-3">
  <form autocomplete="off" asp-action="PostVaccination">
    <div class="row mb-5">
      <div class="card w-75">
        <div class="card-body">
          <div class="row">
            <div class="col autocomplete">
              <label> Сопственик</label>
              <input id="myInput" type="text" class="form-control">
              <input type="text" hidden asp-for="OwnerId" id="ownerId">
            </div>
            <div class="col-6">
              <label> Миленик</label>
              @Html.DropDownListFor(m => m.PetId, new SelectList(string.Empty, "Id", "name"), "Одбери миленик",
              new {@class= "form-control", @id="pet", @name= "pet"})
            </div>

          </div>
          <div class="row mt-3">
            <div class="col-6">
              <label>Тип на вакцина</label>
              <select class="form-control" asp-for="Vaccine" , asp-items="@Model.Vaccines">
              </select>
            </div>
          </div>
        </div>

      </div>
      <div class="col">
        <button class="btn btn-info mb-3" id="accountBtn">Извештај</button>
        <button class="btn btn-info">Здраствен картон</button>
      </div>

    </div>


    <div class="row">
      <div class="card w-100">
        <div class="card-body">
          <h5>Терапија</h5>
          <div class="row">
            <div class="col">
              @Html.Partial("_ChekupMedicamentsPartial", @Model.CheckupDetailViewModel)
            </div>
          </div>

          <div id="addAddMoreDiv"></div>
          <a id="add_row" class="btn btn-primary float-right">Додади ред</a>
          <br />
          <br />

        </div>
      </div>
    </div>`


    <div class="card">
      <div class="card-body">

        <div class="row mt-3">
          <div class="col-3">
            <input type="submit" class="btn btn-success float-left" value="Зачувај" />
          </div>
          <div class="col">

          </div>
          <div class="col form-inline">
            <input type="number" asp-for="PaidSum" class="form-control  mt-3" placeholder="Наплати">
          </div>
          <div class="col">
            <div >

            </div>
            <div class=" mt-3 mr-3" id="total">

            </div>
          </div>

        </div>

      </div>
    </div>

  </form>

</div>*@
